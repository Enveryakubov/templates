podTemplate(yaml: '''
apiVersion: v1
kind: Pod
metadata:
  name: jenkins-slave
  namespace: cicd
spec:
  hostNetwork: true
  dnsPolicy: Default
  containers:
  - name: helm
    image: alpine/helm
    command:
        - cat
    tty: true
  - name: docker
    image: docker:dind
    securityContext:
      privileged: true
    env:
      - name: DOCKER_TLS_CERTDIR
        value: ""
    args:
    - --insecure-registry=nexus.do.neoflex.ru:8083
    - --mtu=1450
    volumeMounts:
      - name: dind-storage
        mountPath: /var/lib/docker
  volumes:
  - name: dind-storage
    emptyDir: {}
''') {
    node(POD_LABEL) {
        //////////Step 1//////////
        //Скачивается репо в контейнер Docker
        stage('Git Clone in Docker containter') {
                container('docker') {
                    git credentialsId: 'cicd-user-gitlab',
                        url: 'https://neogit.neoflex.ru/nfo-projects/prototypes/frontend-modules2.0/prototypes/ofr_prototype/ofr-mf-host.git', branch: 'master'
                }
        }
        //////////Step 2//////////
        //Изменяется адрес репо на прокси и собирается образ
        stage('Docker Build') {
                container('docker') {
                    withCredentials([usernamePassword(
                        credentialsId: 'docker-token',
                        usernameVariable: 'USERNAME',
                        passwordVariable: 'PASSWORD'
                    )]) {    
                sh """
                    ls -la && \
                    sed 's,http://pluto:9081/repository/npm-all/,http://nexus.do.neoflex.ru/repository/npm-ofr/,g' yarn.lock > yarn.lockbuff && cat yarn.lockbuff > yarn.lock && \
                    sed 's,http://pluto:9081/repository/npm-all/,http://nexus.do.neoflex.ru/repository/npm-ofr/,g' .npmrc > npmrcbuff && cat npmrcbuff > .npmrc && \
                    docker login -u $USERNAME -p $PASSWORD && \
                    docker build -t nexus.do.neoflex.ru:8083/ofr-mf-host:$BUILD_ID .
                """
                }
            }    
        }
        //////////Step 3//////////
        //Образ отправляется в репо pluto через прокси nexus.do
        stage('Docker Login & Push') {
                container('docker') {
                    withCredentials([usernamePassword(
                        credentialsId: 'cicd-user-nexus',
                        usernameVariable: 'USERNAME',
                        passwordVariable: 'PASSWORD'
                    )]) {
                    sh """
                        docker login -u $USERNAME -p $PASSWORD nexus.do.neoflex.ru:8083 &&  \
                        docker push  nexus.do.neoflex.ru:8083/ofr-mf-host:$BUILD_ID
                    """
                }
            }
        }
        //////////Step 4//////////
        //Скачивается репо в контейнер Helm
        stage('Git Clone in Helm container') {
                container('helm') {
                    git credentialsId: 'cicd-user-gitlab',
                        url: 'https://neogit.neoflex.ru/nfo-projects/prototypes/frontend-modules2.0/prototypes/ofr_prototype/ofr-mf-host.git', branch: 'master'
                }
        }
        //////////Step 5//////////
        //Деплоиться образ в kubernetes с помощью helm
        stage('Deploy'){
                container('helm') {
                    def NAMESPACE = "dev"
            
                    withKubeConfig(credentialsId: 'kubeconfig-file') {
                        //echo "${currentBuild.id}"
                        //echo "${ingress_name}"
                    sh """
                        helm upgrade --create-namespace --install --namespace $NAMESPACE ofr-mf-host ./HelmChart -f HelmChart/values.yaml --set images="172.19.19.2/ofr-mf-host:$BUILD_ID"
                    """
                     
                }
            }
        }
    }
}
